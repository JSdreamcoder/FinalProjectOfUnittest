@using Assignment_QnAWeb.Models
@model PaginatedList<Ticket>



<h1>@ViewBag.ProjectName Tickets</h1>

<p>
    <a asp-action="Create">Submit new Ticket</a>
</p>

<form asp-action="Index" method="get" >
    <div class="form-actions no-color">
        <p>
            Find by Title: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            <input type="hidden" name="projectid" value=@ViewBag.ProjectId />
            <input type="hidden" name="projectname" value=@ViewBag.ProjectName />
           
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Title
            </th>
            <th>
                Description
            </th>
            <th>
                Created 
            </th>
            <th>
                Updated
            </th>
            
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
        
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
  var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-projectid=@ViewBag.ProjectId
   asp-route-projectname=@ViewBag.ProjectName
   class="btn btn-default @prevDisabled">
   Prev
   </a> 
@for(var i=1; i<=Model.TotalPages;i++)
{
   var isPage = Model.PageIndex == i ? "disabled" : "";
   <a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber=@i
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-projectid=@ViewBag.ProjectId
   asp-route-projectname=@ViewBag.ProjectName
   
   class="btn btn-default @isPage">
   @i
   </a> 
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-projectid=@ViewBag.ProjectId
   asp-route-projectname=@ViewBag.ProjectName
   class="btn btn-default @nextDisabled">
   Next
   </a> 
</div>